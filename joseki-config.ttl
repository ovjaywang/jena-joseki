# This file is written in N3 / Turtle

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .

@prefix module: <http://joseki.org/2003/06/module#> .
@prefix joseki: <http://joseki.org/2005/06/configuration#> .
@prefix ql:     <http://jena.hpl.hp.com/2003/07/query/> .
@prefix ja:     <http://jena.hpl.hp.com/2005/11/Assembler#> .

## --------------------------------------------------------------
## This file is written in N3 / Turtle
## It is an RDF graph - order of RDF triples does not matter
## to the machine but it does help people who need to edit this file.

## Note: web.xml must be in-step with this file.
## for each service, 

## Note: adding rdfs:label to blank nodes will cause Joseki 
## to print that in log messages.

## See also file:joseki-config-example.ttl


## --------------------------------------------------------------
## About this configuration

<> rdfs:label "Joseki Configuration File" .

## --------------------------------------------------------------
## About this server

[]  rdf:type joseki:Server ;
    # Example of some initialization code.
    joseki:initialization
        [ module:implementation 
            [ module:className <java:org.joseki.util.ServiceInitSimple> ;
              rdfs:label "Example initializer" ; ]
        ] ;
    .

## --------------------------------------------------------------
## Services

## Services are best described by a blank node - it's the
## serviceRef that will be used to match requests to services,
## not some resource URI for the description.

## Note that the service reference and the routing of incoming
## requests by URI as defined by web.xml have to align.

# Service 1
# General purpose SPARQL processor, no dataset, expects the
# request to specify the dataset (either by parameters in the
# protocol request or in the query itself).

[]
    rdf:type            joseki:Service ;
    rdfs:label          "service point" ;
    joseki:serviceRef   "sparql" ;
    joseki:processor    joseki:ProcessorSPARQL ;
    .

# Service 2 - SPARQL processor only handling a given dataset
[]
    rdf:type            joseki:Service ;
    rdfs:label          "SPARQL on the books model" ;
    joseki:serviceRef   "books" ;
    # dataset part
    joseki:dataset      _:books ;
    # Service part.
    # This processor will not allow either the protocol,
    # nor the query, to specify the datset.
    joseki:processor    joseki:ProcessorSPARQL_FixedDS ;
    .

## --------------------------------------------------------------
## Datasets

_:books   rdf:type ja:RDFDataset ;
    rdfs:label "Books" ;
    # Either - or
    ja:defaultGraph 
      [ rdfs:label "books.n3" ;
        a ja:MemoryModel ;
        ja:content [ja:externalContent <file:Data/books.n3> ] ;
      ] ;
    joseki:defaultGraph
      [ rdfs:label "books.n3" ;
        a ja:MemoryModel ;
        ja:content [ja:externalContent <file:Data/books.n3> ] ;
      ]
    .


## --------------------------------------------------------------
## Processors
## Usually, this section is empty because only standard
## processors are used via inclusion of common definitions.

## ----- definitions --------------------------------------------------

joseki:ProcessorSPARQL
    rdfs:label "General SPARQL processor" ;
    rdf:type joseki:Processor ;
    module:implementation joseki:ImplSPARQL ;

    # Parameters - this processor processes FROM/FROM NAMED
    joseki:allowExplicitDataset       "true"^^xsd:boolean ;
    joseki:allowWebLoading            "true"^^xsd:boolean ;
    ## And has no locking policy (it loads data each time).
    ## The default is mutex (one request at a time)
    joseki:lockingPolicy                joseki:lockingPolicyNone ;
    .

joseki:ProcessorSPARQL_FixedDS
    rdfs:label "SPARQL processor for fixed datasets" ;
    rdf:type joseki:Processor ;
    module:implementation joseki:ImplSPARQL ;

    # This processor does not accept queries with FROM/FROM NAMED
    joseki:allowExplicitDataset       "false"^^xsd:boolean ;
    joseki:allowWebLoading            "false"^^xsd:boolean ;
    joseki:lockingPolicy              joseki:lockingPolicyMRSW ;
    .

joseki:ImplSPARQL
    rdf:type   joseki:ServiceImpl ;
    module:className
        <java:org.joseki.processors.SPARQL> .

# Local Variables:        
# tab-width: 4
# indent-tabs-mode: nil
# End:

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix module: <http://joseki.org/2003/06/module#> .
@prefix :       <http://joseki.org/2003/07/configuration#> .

##-------------------------------------------------------------

<> rdfs:comment "Configuration schema for Joseki" ;
   rdfs:seeAlso <http://joseki.org/> .

<> rdfs:comment "$Id: joseki-schema.n3,v 1.2 2004/04/29 18:02:12 andy_seaborne Exp $" .

##-------------------------------------------------------------
## Server configuration
## The server is a bNode with type ...

:JosekiServer a   rdfs:Class ;
    rdfs:comment  "Required type" ;
    rdfs:label    "Server".

:josekiSchema
    a rdf:Property ;
    rdfs:subPropertyOf  rdfs:definedBy .

:alsoInclude
    a rdf:Property ;
    rdfs:comment        "Other resources to read and merge (e.g. file:...)" ;
    rdfs:subPropertyOf  rdfs:seeAlso .

:useContentType
    a               rdf:Property ;
    rdfs:range      rdfs:Literal ;
    rdfs:comment    "Set the default MIME type for the protocol" ;
    rdfs:label      "Content-Type" .


:serverPort
    a rdf:Property ;
    rdfs:domain   :JosekiServer ;
    rdfs:range    rdfs:Literal ;
    rdfs:comment  "Port number (if not implicit through servlet)" ; 
    rdfs:comment  "Not normally needed" ;
    rdfs:label    "Port number".

:serverURI
    a rdf:Property ;
    rdfs:domain   :JosekiServer ;
    rdfs:comment  "URI of this server - Not normally needed" ;
    rdfs:label    "Server URI".

:serverHttpExplicitNoCache
    a rdf:Property ;
    rdfs:domain   :JosekiServer ;
    rdfs:range    rdfs:Literal ;
    rdfs:comment  "Ensure HTTP headers have \"no cache\" set" ;
    rdfs:label    "Server HTTP Explicit No Cache".


## :serverDebug
##     a rdf:Property ;
##     rdfs:domain   :JosekiServer ;
##     rdfs:range    rdfs:Literal ;
##     rdfs:comment  "Set server debugging mode" ;
##     rdfs:label    "Server Debug".


##-------------------------------------------------------------
## Declarations for operations and query languages

:Operation      a           rdfs:Class .

:QueryOperation 
    a           rdfs:Class ;
    rdfs:subClassOf :Operation.


:className
    a rdf:Property ;
    rdfs:domain     :Operation ;
    rdfs:range      rdfs:Literal ;
    rdfs:comment    "code to load".
    

## ##-------------------------------------------------------------
## ## Symbols for possible operations.
## Now done as URIs (strings, not classes)
## 
## :opQuery        rdf:type    :Operation ;  rdfs:label    "query" .
## :opQueryModel   rdf:type    :Operation ;  rdfs:label    "query model" .
## :opAdd          rdf:type    :Operation ;  rdfs:label    "add"   .
## :opRemove       rdf:type    :Operation ;  rdfs:label    "remove" .
## :opOptions      rdf:type    :Operation ;  rdfs:label    "options" .
## 
## :opUpdate       rdf:type    :Operation ;  rdfs:label    "update" .
## :opLock         rdf:type    :Operation ;  rdfs:label    "lock" .
## :opUnlock       rdf:type    :Operation ;  rdfs:label    "unlock" .
## 
## :queryRDQL      a   :QueryOperation ;   rdfs:label    "RDQL" .
## :queryGET       a   :QueryOperation ;   rdfs:label    "HTTP GET" .

##-------------------------------------------------------------
## Properties used in a query request encoded in RDF

:queryScript
    a               rdf:Property ;
    rdfs:range      rdfs:Literal ;
    rdfs:comment    "The query as a string" ;
    rdfs:label      "query string" .

:requestQueryLanguage
    a               rdf:Property ;
    rdfs:range      rdfs:Literal ;
    rdfs:comment    "The query language of this request" ;
    rdfs:label      "query language name" .

##-------------------------------------------------------------
## Properties used in a "options" result model.



##=============================================================
## Descriptions of models
## Will align with ModelFactory defintions

:ModelDescription a        rdfs:Class .

:SourceController a        rdfs:Class ;
    rdfs:comment  "An adapter to an external model source" .

:sourceController
    a             rdf:Property ;
    rdfs:subPropertyOf  module:module ;
    rdfs:domain   :ModelDescription ;
    rdfs:range    :SourceController ;
    rdfs:comment  "This model uses an adapter" .


:isImmutable
    a             rdf:Property ;
    rdfs:domain   :ModelDescription ;
    rdfs:range    rdfs:Literal ;
    rdfs:comment  "Indicate whether this model changes" ;
    rdfs:label    "isImmutable" ;
    .

:user
    a             rdf:Property ;
    rdfs:comment  "User ID for relational database" ;
    rdfs:domain   :ModelDescription ; 
    rdfs:range    rdfs:Literal .

:password
    a             rdf:Property ;
    rdfs:comment  "Password for relational database" ;
    rdfs:domain   :ModelDescription ; 
    rdfs:range    rdfs:Literal .

:dbType
    a             rdf:Property ;
    rdfs:comment  "Type for a relational database" ;
    rdfs:domain   :ModelDescription ; 
    rdfs:range    rdfs:Literal .

:dbModelName
    a             rdf:Property ;
    rdfs:comment  "Model name a relational database model" ;
    rdfs:domain   :ModelDescription ; 
    rdfs:range    rdfs:Literal .

:dbDriver
    a             rdf:Property ;
    rdfs:comment  "Driver name relational databases" ;
    rdfs:domain   :ModelDescription ; 
    rdfs:range    rdfs:Literal .


##=============================================================
## Attached models

:AttachedModel a        rdfs:Class ;
    # rdfs:subClassOf     ModelDescription ;
    .
    

# Property declarations for configured models

:attachedModel
    a             rdf:Property ;
    rdfs:domain   :AttachedModel ;
    rdfs:comment  "Required property" ;
    rdfs:label    "URI of the server resource" ;
    rdfs:range    rdfs:Resource ;   # URI of file or DB
    .

:vocabulary
    a             rdf:Property ;
    rdfs:domain   :AttachedModel ;
    rdfs:comment  "Optional specification of an RDFS vocabulary to use with this data" ;
    rdfs:label    "RDFS Vocabulary" ;
    rdfs:range    rdfs:Resource ;   # URI of vocabulary
    .

:ontology
    a             rdf:Property ;
    rdfs:domain   :AttachedModel ;
    rdfs:comment  "Optional specification of an OWL ontology to use with this data" ;
    rdfs:label    "OWL ontology" ;
    rdfs:range    rdfs:Resource ;   # URI of ontology
    .

:ontDocumentManager
    a             rdf:Property ;
    rdfs:domain   :AttachedModel ;
    rdfs:comment  "Optionally set the document manager for the ontology" ;
    rdfs:label    "OWL ontology document manager" ;
    rdfs:range    rdfs:Resource ;   # URI of doc manager profile
    .

:modelSpec
    a             rdf:Property ;
    rdfs:domain   :AttachedModel ;
    rdfs:comment  "Model spec to be used in creating the Jena model to back an attached model" ;
    rdfs:label    "ModelSpec" ;
    rdfs:range    rdfs:Resource ;   # Reference to a ModeSpec
    .

##-------------------------------------------------------------
## Binding a query language to an attached model

:hasQueryOperation
    a               rdf:Property ;
    rdfs:subPropertyOf  module:module ;
    rdfs:domain     :attachedModel ;
    rdfs:range      :QueryOperationBinding ;
    rdfs:comment    "Multi-instance property" ;
    rdfs:comment    "Query language description" .

:QueryOperationBinding
    a               rdfs:Class .

:queryOperationName
    a               rdf:Property ;
    rdfs:domain     :QueryOperationBinding ;
    rdfs:label      "Name of querylanguage" ;
    rdfs:comment    "The name used identify the operation on this model - can be a URI or a short name (string)" .

# No longer used? Just use module:implementation
:queryOperation
    a rdf:Property ;
    rdfs:subPropertyOf module:implementation ;
    rdfs:domain     :QueryLanguageBinding ;
    rdfs:range      :QueryLanguage ;
    rdfs:comment    "" ;
    rdfs:label      "Identify the query language processor" .

##-------------------------------------------------------------
## Binding a processor to an attached model

:hasOperation
    a               rdf:Property ;
    rdfs:subPropertyOf  module:module ;
    rdfs:domain     :attachedModel ;
    rdfs:range      :OperationBinding ;
    rdfs:comment    "Multi-instance property" .

:OperationBinding
    a               rdfs:Class .
    
:operationName
    a               rdf:Property ;
    rdfs:domain     :OperationBinding ;
    rdfs:comment    "The name used identify the operationon this model".

# No longer used? Just use module:implementation
:operation
    a rdf:Property ;
    rdfs:subPropertyOf module:implementation ;
    rdfs:domain     :OperationBinding ;
    rdfs:range      :Operation ;
    rdfs:comment    "" ;
    rdfs:label      "Identify the operation processor" .

##-------------------------------------------------------------

:namespacePrefix
    a             rdf:Property ;
    rdfs:comment  "Defines an optional namespace prefix for this model." ;
    .

:prefix
    a             rdf:Property ;
    rdfs:comment  "The namespace prefix part of a namespace prefix" ;
    rdfs:range    rdfs:Literal .

:nsURI
    a             rdf:Property ;
    rdfs:comment  "The namespace URI part of a namespace prefix" ;
    rdfs:range    rdfs:Resource .

# Local Variables:
# tab-width: 4
# indent-tabs-mode: nil
# End:

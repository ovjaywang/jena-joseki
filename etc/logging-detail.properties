## ---- Java logging 
## Example for more detail to the logging (Java 1.4 logging)

## ---------------------------------------------------
## Overall settings

handlers=org.joseki.logging.java.StreamHandlerFlush

#### All output at least at this level.
## Use: 
##    ALL for everything
##    FINEST    to get Commons Logging level 'trace'
##      Same as ALL
##    FINE      to get Commons Logging level 'debug'
##    INFO      to get Commons Logging level 'info'
##    WARNING   to get Commons Logging level 'warn'
##    SEVERE    to get Commons Logging level 'fatal'

# Normal level
.level=INFO

## ---------------------------------------------------
## Joseki server
org.joseki.server.level=ALL

## The logger name of the main servlet package
## It will output more details of the routing of each request
## FINE is a more details log of the execution
## ALL is even more verbose.

org.joseki.server.http.level=ALL

## This controls logging the configuration
## Normally (i.e. level INFO) the configuration is output 
## but thsi adds increasing amounts of detail to help debug 
## config files.
## NB Configurations are not be processed in order that 
##    attached models appear inteh config file because
##    they are read into an RDF model first.

org.joseki.server.Configuration.level=ALL

## ---------------------------------------------------
## Embedded Jetty server
org.mortbay.level=INFO

## ---------------------------------------------------
## Formatters : set formatter
org.joseki.logging.java.StreamHandlerFlush.level=ALL
org.joseki.logging.java.StreamHandlerFlush.formatter=org.joseki.logging.java.OneLineFormatter

## ---------------------------------------------------
## Joseki client
## com.hp.hpl.jena.joseki.level=INFO
## com.hp.hpl.jena.joseki.HttpQuery.level=FINE
